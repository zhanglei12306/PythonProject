# 实例属性:
# 通过类创建的对象 又称为 实例对象，对象属性 又称为 实例属性，记录对象各自的数据，不同对象的同名实例属性，记录的数据可能各不相同
# 类属性:
# 类属性就是 类对象 所拥有的属性，它被 该类的所有实例对象 所共有。
# 类属性可以使用 类对象 或 实例对象 访问
# 属性记录的数据不同,定义对象属性; 属性记录的数据始终相同,定义类属性
class Dog:
    type = "狗"  # 类属性  节省内存
    def __init__(self, name):
        self.name = name  # 对象属性
        # self.type = "Dog"

# 访问类属性  类对象/实例对象都可以
# print(Dog.type)
# # 类属性可以被所有对象所共有
dog1 = Dog("旺财")
# print(dog1.type)

"""类属性注意点: 1> 避免对象属性和类属性同名 2> 类属性只能通过类对象来修改 3> 类属性也可以私有"""
# print(Dog.type)  # 类属性
# print(dog1.type)  # 实例对象优先访问对象属性（对象属性和类属性同名）

# Dog.type = "Dog"
dog1.type = "dog1"  # 没有修改类属性,但是定义了一个新的对象属性type
print(Dog.type)  # 类属性
print(dog1.type)  # 优先访问的对象属性type

# print(Dog.__type)  # 私有类属性在类外部不能访问
